spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://10.123.42.46:3306/user_data?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai
    username: tdsql_admin
    password: guangqi@2018
mybatis-plus:
  global-config:
    db-config:
      id-type: auto
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: mysql
  #mapper配置文件
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.gagc.dataanalysis.entity
  #开启驼峰命名
  configuration:
    map-underscore-to-camel-case: false
    cache-enabled: false

kafka:
  consumer:
    bootstrap:
      servers: 10.123.46.5:9092
    enable:
      auto:
        commit: false
    session:
      timeout: 6000  #毫秒单位
    auto:
      commit:
        interval: 100
      # earliest
      #当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      #latest
      #当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据：即：实时生产，实时消费，不会从头开始消费
      #none
      #topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      offset:
        reset: latest
    topic: car_behavior
    group:
      id: group2
    concurrency: 10
    # 指定消息key和消息体的编解码方式
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  producer:
    bootstrap:
      servers: 10.123.46.5:9200

    topic: car_behavior
    retries: 0
    #procedure要求leader在考虑完成请求之前收到的确认数，用于控制发送记录在服务端的持久化，其值可以为如下：
    #acks = 0 如果设置为零，则生产者将不会等待来自服务器的任何确认，该记录将立即添加到套接字缓冲区并视为已发送。在这种情况下，无法保证服务器已收到记录，并且重试配置将不会生效（因为客户端通常不会知道任何故障），为每条记录返回的偏移量始终设置为-1。
    #acks = 1 这意味着leader会将记录写入其本地日志，但无需等待所有副本服务器的完全确认即可做出回应，在这种情况下，如果leader在确认记录后立即失败，但在将数据复制到所有的副本服务器之前，则记录将会丢失。
    #acks = all 这意味着leader将等待完整的同步副本集以确认记录，这保证了只要至少一个同步副本服务器仍然存活，记录就不会丢失，这是最强有力的保证，这相当于acks = -1的设置。
    #可以设置的值为：all, -1, 0, 1
    acks: all
    # 每次批量发送消息的数量,produce积累到一定数据，一次发送
    batch:
      size: 16384
    linger: 1
    # produce积累数据一次发送，缓存大小达到buffer.memory就发送数据
    buffer:
      memory: 33554432